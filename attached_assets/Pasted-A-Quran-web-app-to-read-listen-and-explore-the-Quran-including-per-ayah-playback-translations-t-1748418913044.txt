A Quran web app to read, listen, and explore the Quran, including per-ayah playback, translations, tafsir, bookmarks, and more. It should work 100% on the frontend only, using HTML, CSS, and JavaScript (vanilla only) — no frameworks, no backend, and no external libraries.

🔧 FILE STRUCTURE
bash
Copy
Edit
index.html      → Main page
styles.css      → All styles
script.js       → All logic and features
🌙 CORE FEATURES
✅ Surah Browser

Show list of all 114 Surahs (Arabic + English names)

Each surah is clickable and loads full content

✅ Individual Ayah View

Show Arabic text

Show English and Urdu translation

Show word-by-word translation on toggle

✅ Per-Ayah Audio Playback

Click "Play Ayah" to play just one ayah

Click "Play from this Ayah" to continue to next ayahs till end of surah

Show current ayah and scroll to it

✅ Reciter Selection
Let user choose one of the following:

Mishary Rashid Alafasy (ID: 7)

Abdul Basit (ID: 1)

Saad Al-Ghamdi (ID: 2)

Maher Al-Muaiqly (ID: 4)

Yasser Al-Dosari (ID: 6)

✅ Tafsir Viewer
Show tafsir of each ayah when clicked. Use:

Tafsir Ibn Kathir or

Tafsir Al-Jalalayn

Use from https://api.quran.com/v4/quran/tafsirs/ (choose from available tafsir IDs)

✅ Loop Controls

Loop current ayah

Loop entire surah

Loop toggles per user preference

✅ Translations
Toggle translation in:

English (Saheeh International or Pickthall)

Urdu (Jalandhry or Fateh Muhammad Jalandhry)

Arabic only

✅ Search Functionality

Live search while typing

Search by surah name or number

✅ Bookmarks

Save favorite ayahs using localStorage

Bookmark icon toggles (❤️)

✅ Dark/Light Mode

Toggle theme

Save preference in localStorage

✅ Responsive UI

Works smoothly on both desktop and mobile

✅ Islamic UI Design

Use Islamic fonts (e.g. Amiri for Arabic)

Primary color theme: Green & Gold

Smooth transitions and scroll behavior

Custom message dialogs (not alert())

🔊 AUDIO INTEGRATION
Use this trusted and maintained Quran Audio API for ayah-by-ayah playback:

🔗 Base:
bash
Copy
Edit
https://api.quran.com/v4/quran/verses/audio
🔧 Example Endpoint:
bash
Copy
Edit
GET https://api.quran.com/v4/quran/verses/audio?recitation=7&chapter=1
This will return audio links for Surah Al-Fatiha, recited by Mishary Rashid (recitation=7).

🎧 Audio Features
Use HTML5 <audio> element

Auto play next ayah if in continuous mode

Highlight ayah currently playing

Smooth scroll to current ayah

Let users go to previous or next ayah manually

Loop current ayah or surah (user-controlled)

📖 QURAN TEXT & TRANSLATION API
Use Al-Quran Cloud API or Quran.com API v4:

Preferred:
https://api.quran.com/v4/quran/verses/uthmani

https://api.quran.com/v4/quran/translations/131 (English)

https://api.quran.com/v4/quran/translations/92 (Urdu)

You may load all 114 surahs initially with just their name, number, and revelation type, and fetch full content lazily.

📚 TAFSIR API
Use this for showing tafsir when a user clicks the ayah:

bash
Copy
Edit
https://api.quran.com/v4/quran/tafsirs/{tafsir_id}/verses/{verse_key}
Tafsir ID Example:

Ibn Kathir = 169

Al-Jalalayn = 157

🌍 MULTILINGUAL SUPPORT
Store user preferences for language, tafsir, reciter, loop mode, theme, etc. in localStorage

Add a Settings Panel to manage all this

🚀 PERFORMANCE & UX
Use async/await with proper loading indicators

Show Loading... spinners while fetching data

Catch and show error messages in custom UI

Use Toast notifications for user actions (bookmarked, error, etc.)

Optimize for fast loading and minimal API calls

🧠 ACCESSIBILITY
Use ARIA labels

Ensure keyboard accessibility

Use contrast-friendly colors in dark mode

✅ MUST-HAVE COMPONENTS
Header with app title and controls

Sidebar/menu for surah navigation

Main content area to show ayahs

Audio player (fixed or floating)

Settings modal

Search bar

Toast notifications

Bookmark system

Loading indicators

Word-by-word translation toggle

🔒 LOCAL STORAGE KEYS
theme → "dark" or "light"

reciter → recitation ID

translation → translation ID

tafsir → tafsir ID

bookmarks → saved ayah references

💡 FINAL NOTE
The app should work entirely in the browser — no server-side code

Must be optimized, functional, and look professional

Do not include ads in the project

No SPA structure — just a single index.html file